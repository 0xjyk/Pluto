TOKEN(LSQBRACREP, 91, "<:")
TOKEN(RSQBRACREP, 93, ":>")
TOKEN(LCBRACREP, 123, "<%")
TOKEN(RCBRACREP, 125, "%>")
TOKEN(HASHREP, 35, "%:")
TOKEN(HHASHREP, 255, "%:%:")

TOKEN(ID, 0, "identifier")
TOKEN(KEYWORD, 1, "keyword")
TOKEN(PUNCT, 2, "punctuation")
TOKEN(ERROR, 3, "error")
TOKEN(ULLONG, 4, "unsigned long long int")
TOKEN(SLLONG, 5, "long long int")
TOKEN(ULONG, 6, "unsigned long int")
TOKEN(SLONG, 7, "long int")
TOKEN(UINT, 8, "unsigned int") 
TOKEN(SINT, 9, "int")
TOKEN(SDOUBLE, 10, "double")
TOKEN(LDOUBLE, 11, "long double")
TOKEN(SFLOAT, 12, "float")
TOKEN(UCHAR, 13, "unsigned char") 
TOKEN(WCHAR, 14, "wide char") 
TOKEN(CHAR16, 15, "char 16")
TOKEN(CHAR32, 16, "char 32")
TOKEN(STR, 17, "string")
TOKEN(INTCONST, 18, "int const")
TOKEN(FLOATCONST, 19, "float const")
TOKEN(NOT, 33, "!")
TOKEN(HASH, 35, "#")
TOKEN(MOD, 37, "%")
TOKEN(BAND, 38, "&")
TOKEN(LBRAC, 40, "(")
TOKEN(RBRAC, 41, ")")
TOKEN(STAR, 42, "*")
TOKEN(PLUS, 43, "+")
TOKEN(COM, 44, ",")
TOKEN(NEG, 45, "-")
TOKEN(DOT, 46, ".")
TOKEN(DIV, 47, "/")
TOKEN(COL, 58, ":")
TOKEN(SCOL, 59, ";")
TOKEN(LESS, 60, "<")
TOKEN(ASSIGN, 61, "=")
TOKEN(GREATER, 62, ">")
TOKEN(Q, 63, "?")
TOKEN(LSQBRAC, 91, "[")
TOKEN(RSQBRAC, 93, "]")
TOKEN(XOR, 94, "^")
TOKEN(LCBRAC, 123, "{")
TOKEN(BOR, 124, "|")
TOKEN(RCBRAC, 125, "}")
TOKEN(BNOT, 126, "~")



TOKEN(ARROW, 233, "->")
TOKEN(INCR, 234, "++")
TOKEN(DECR, 235, "--")
TOKEN(LSHFT, 236, "<<")
TOKEN(RSHFT, 237, ">>")
TOKEN(LEQ, 238, "<=")
TOKEN(GEQ, 239, ">=")
TOKEN(EQ, 240, "==")
TOKEN(NEQ, 241, "!=")
TOKEN(AND, 242, "&&")
TOKEN(OR, 243, "||")
TOKEN(ELLIPS, 244, "...")
TOKEN(MULTEQ, 245, "*=")
TOKEN(DIVEQ, 246, "/=")
TOKEN(MODEQ, 247, "%=")
TOKEN(INCREQ, 248, "+=")
TOKEN(DECREQ, 249, "-=")
TOKEN(LSHFTEQ, 250, "<<=")
TOKEN(RSHFTEQ, 251, ">>=")
TOKEN(ANDEQ, 252,"&=")
TOKEN(XOREQ, 253, "^=")
TOKEN(OREQ, 254, "|=")
TOKEN(HHASH, 255, "##")
TOKEN(EOI, 256, "end of input")


KEY(AUTO, 127, "auto")
KEY(BREAK, 128, "break")
KEY(CASE, 129, "case")
KEY(CHAR, 130, "char")
KEY(CONST, 131, "const")
KEY(CONTINUE, 132, "continute")
KEY(DEFAULT, 133, "default")
KEY(DO, 134, "do")
KEY(DOUBLE, 135, "double")
KEY(ELSE, 136, "else")
KEY(ENUM, 137, "enum")
KEY(EXTERN, 138, "extern")
KEY(FLOAT, 139, "float")
KEY(FOR, 140, "for")
KEY(GOTO, 141, "goto")
KEY(IF, 142, "if")
KEY(INLINE, 143, "inline")
KEY(INT, 144, "int")
KEY(LONG, 145, "long")
KEY(REGISTER, 146, "register")
KEY(RESTRICT, 147, "restrict")
KEY(RETURN, 148, "return")
KEY(SHORT, 149, "short")
KEY(SIGNED, 150, "signed")
KEY(SIZEOF, 151, "sizeof")
KEY(STATIC, 152, "static")
KEY(STRUCT, 153, "struct")
KEY(SWITCH, 154, "switch")
KEY(TYPEDEF, 155, "typedef")
KEY(UNION, 156, "union")
KEY(UNSIGNED, 157, "unsigned")
KEY(VOID, 158, "void")
KEY(VOLATILE, 159, "volatile")
KEY(WHILE, 160, "while")
KEY(_ALIGNAS, 161, "_Alignas")
KEY(_ALIGNOF, 162, "_Alignof")
KEY(_ATOMIC, 163, "_Atomic")
KEY(_BOOL, 164, "_Bool")
KEY(_COMPLEX, 165, "_Complex")
KEY(_GENERIC, 166, "_Generic")
KEY(_IMAGINARY, 167, "_Imaginary")
KEY(_NORETURN, 168, "_Noreturn")
KEY(_STATIC_ASSERT, 169, "_Static_assert")
KEY(_THREAD_LOCAL, 170, "_Thread_local")


